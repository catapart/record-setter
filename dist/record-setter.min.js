"use strict";const{isArray:A}=Array;const{keys:_}=Object;var d=Object.defineProperty,e=Object.getOwnPropertyDescriptor,f=Object.getOwnPropertyNames,g=Object.prototype.hasOwnProperty,h=(_a,D,_C,_d)=>{if(D&&typeof D==='object'||c(D))for(let _A of f(D))(!g.call(_a,_A)&&_A!==_C)&&d(_a,_A,{get:()=>D[_A],enumerable:!(_d=e(D,_A))||_d.enumerable});return _a},B={},k=class{#database;#storeName;#tables;#useSoftDelete=!1;#softDeleteTimestampPropertyName='deletedTimestamp';constructor(aA,_B,aB,_D){this.#database=aA;this.#storeName=_B;this.#tables=aB;_D!=null&&(this.#useSoftDelete=_D.useSoftDelete||this.#useSoftDelete,this.#softDeleteTimestampPropertyName=_D.softDeleteTimestampPropertyName||this.#softDeleteTimestampPropertyName)}openTransaction(aC='readwrite'){if(this.#database==null)throw Error('The database has not been opened.');return this.#database.transaction(this.#tables,aC)}async addRecord(aD){await this.updateRecord(aD);return!0}async addRecords(aE){return (await this.updateRecords(aE)).map(item=>item!=null)}getRecord(aF){return new Promise((aG,aH)=>{var aI=this.openTransaction('readonly'),aJ=aI.objectStore(this.#storeName),_e=aJ.get(aF);_e.onsuccess=aK=>{aG(aK.target.result)};_e.onerror=aL=>aH(aL)})}async getRecords(aM,aN){var aO=this.openTransaction('readonly'),aP=[];for(const aQ of aM)aP.push(new Promise((aR,aS)=>{var aT=aO.objectStore(this.#storeName),aU=aT.get(aQ);aU.onsuccess=aV=>{aR(aV.target.result)};aU.onerror=aW=>aS(aW)}));let _E=await Promise.all(aP);aN!=null&&(_E=_E.sort((a,b)=>a[aN]-b[aN]));return _E}async getAllRecords(aX){return new Promise((aY,aZ)=>{var bA=this.openTransaction('readonly'),bB=bA.objectStore(this.#storeName),bC=bB.getAll();bC.onsuccess=bD=>{let bE=bD.target.result;aX!=null&&(bE=bE.sort((a,b)=>a[aX]-b[aX]));aY(bE)};bC.onerror=bF=>aZ(bF)})}async query(bG,bH){return new Promise((bI,bJ)=>{var bK=this.openTransaction('readonly'),bL=bK.objectStore(this.#storeName),bM=_(bG),F=Object.values(bG),G=bM.length>1,n=[];let H=null;if(G)try{var I=bM.join('+');H=bL.index(I)}catch(_){}var _j=H!=null;if(H==null){var K=bM[0];H=K=='id'?bL:bL.index(K)}let L;let m=!1;!_j&&A(F==null?null:_j?F:F[0])?L=H.openCursor():m=!0;L.onsuccess=bN=>{var bO=bN.target.result;if(bO==null){let bQ=n;bH!=null&&(bQ=n.toSorted((a,b)=>a[bH]-b[bH]));bI(bQ);return}let bP=!1;for(let i=m==!0?1:0;i<bM.length;i++){const bR=bO.value[bM[i]],bS=F[i];if(A(bS)){let bT=!1;for(const bU of bS)bR==bU&&(bT=!0);if(bT==!1){bP=!0;break}}else if(bO.value[bM[i]]!=bS){bP=!0;break}}!bP&&n.push(bO.value);bO.continue()};L.onerror=bV=>bJ(bV)})}updateRecord(bW){return new Promise((bX,bY)=>{var bZ=this.openTransaction(),cA=bZ.objectStore(this.#storeName),cB=cA.put(bW);cB.onsuccess=cC=>{var cD=cA.get(cC.target.result);cD.onerror=cE=>bY(cE);cD.onsuccess=cF=>{bX(cF.target.result)}};cB.onerror=cG=>bY(cG)})}async updateRecords(cH){var cI=this.openTransaction(),cJ=[];for(const cK of cH)cJ.push(new Promise((cL,cM)=>{var cN=cI.objectStore(this.#storeName),cO=cN.put(cK);cO.onsuccess=cP=>{cL(cP.target.result)};cO.onerror=cQ=>cM(cQ)}));return await this.getRecords(await Promise.all(cJ))}removeRecord(cR,cS=!1){if(!cS&&this.#useSoftDelete)return this.setIsDeletedSingle(cR,!0);return new Promise((cT,cU)=>{var cV=this.openTransaction(),cW=cV.objectStore(this.#storeName),cX=cW.delete(cR);cX.onsuccess=cY=>{cT(cY.target.result)};cX.onerror=cZ=>cU(cZ)})}removeRecords(dA,dB=!1){if(!dB&&this.#useSoftDelete)return this.setIsDeletedMultiple(dA,!0);return new Promise((dC,dD)=>{var dE=this.openTransaction(),dF=dE.objectStore(this.#storeName),dG=[],_f=dH=>{if(dH>dA.length-1){dC(dG);return}const dI=dF.delete(dA[dH]);dI.onsuccess=()=>{dG.push(!0);_f(dH+1)}};_f(0);dE.onabort=dJ=>{console.log('Transaction Aborted');dD(dJ)};dE.oncomplete=dK=>{dC(dK.target.result)}})}restoreRecord=id=>this.setIsDeletedSingle(id,!1);restoreRecords=ids=>this.setIsDeletedMultiple(ids,!1);async setIsDeletedSingle(dL,dM){var dN=await this.getRecord(dL);dN[this.#softDeleteTimestampPropertyName]=dM==!0?Date.now():void 0;await this.updateRecord(dN);return!0}async setIsDeletedMultiple(dO,dP){var dQ=await this.getRecords(dO);for(let i=0;i<dQ.length;i++)dQ[i][this.#softDeleteTimestampPropertyName]=dP==!0?Date.now():void 0;await this.updateRecords(dQ);return Array().fill(!0,0,dQ.length-1)}clear(){return new Promise((dR,dS)=>{var dT=this.openTransaction(),dU=dT.objectStore(this.#storeName),dV=dU.clear();dV.onsuccess=dW=>{dR(dW.target.result)};dV.onerror=dX=>dS(dX)})}},l=class{#isOpen=!1;#isInitialized=!1;#database;#keyValueTableName='keyValue';stores=new Map();async open(dY){await this.openDatabase(dY);return this.#isOpen&&this.#isInitialized}async openDatabase(dZ){return new Promise((eA,eB)=>{var eC=indexedDB.open(dZ.name,dZ.version);eC.onsuccess=eD=>{var eE=eD.target;this.#database=eE.result;this.#isOpen=this.#isInitialized=!0;eA()};eC.onupgradeneeded=async eF=>{var eG=eF.target;this.#database=eG.result;await this.createDatabase(dZ);this.#isInitialized=this.#isOpen=!0;eA()};eC.onerror=eH=>eB(eH)})}async createDatabase(eI){if(this.#isInitialized==!0)return;var eJ=[];for(const[eL,eM] of Object.entries(eI.schema)){var eK=eM.split(',').map(item=>item.trim());eJ.push(this.createStorePromise(eL,eK))}_(eI.schema).indexOf(eI.keyValueTableName)==-1&&eJ.push(new Promise((eN,eO)=>{this.#keyValueTableName=eI.keyValueTableName??this.#keyValueTableName;var eP=this.#database.createObjectStore(this.#keyValueTableName,{keyPath:'key'});eP.transaction.oncomplete=eQ=>eN();eP.transaction.onerror=eR=>eO(eR)}));return Promise.all(eJ)}async createStorePromise(eS,eT){var eU=Array();for(const eX of eT){let eY=eX;let eZ=eX;let fA=!1;if(eX.startsWith('!')){eY=eX.substring(1);fA=!0}else if(eX.startsWith('[')&&eX.endsWith(']')){eY=eX.substring(1,eX.length-1);var eV=eY.split('+');eZ=eV}eU.push({name:eY,keyPath:eZ,unique:fA})}var eW=[],_F=this.#database.createObjectStore(eS,{keyPath:eU[0].keyPath});for(let i=1;i<eU.length;i++)eW.push(new Promise((fB,fC)=>{var fD=eU[i];_F.createIndex(fD.name,fD.keyPath,{unique:fD.unique,multiEntry:!A(fD.keyPath)});if(A(fD.keyPath))for(let j=0;j<fD.keyPath.length;j++){const fE=fD.keyPath[j].startsWith('!'),fF=fE?fD.keyPath[j].substring(1):fD.keyPath[j];_F.createIndex(fF,fF,{unique:fE,multiEntry:!0})}_F.transaction.oncomplete=fG=>fB();_F.transaction.onerror=fH=>fC(fH)}));await Promise.all(eW)}async close(){if(this.#database==null){this.#isOpen=!1;return!this.#isOpen}this.#database.close();this.#isOpen=!1;return!this.#isOpen}async delete(){this.#isOpen&&await this.close();return this.deleteDatabase()}deleteDatabase(){return new Promise(fI=>{if(this.#database==null||this.#isInitialized!=!0)throw Error('Unable to delete an uninitialized database.');var fJ=indexedDB.deleteDatabase(this.#database.name);fJ.onsuccess=()=>{this.#database=void 0;this.#isInitialized=!1;fI(!0)};fJ.onerror=fK=>{console.error(fK);fI(!1)}})}addStore(fL,fM,fN){if(this.stores.get(fL)!=null)throw Error('Cannot add store with same name as existing store.');this.stores.set(fL,new k(this.#database, fL, fM??[fL], fN));return this.stores.get(fL)}getStore(fO){var fP=this.stores.get(fO);if(fP==null)throw Error(`Store could not be found by name: ${fO}`);return fP}async getKeyValueStore(){let fQ=this.stores.get(this.#keyValueTableName);fQ==null&&(fQ=await this.addStore(this.#keyValueTableName));if(fQ==null)throw Error('Unable to create a key-value store.');return fQ}async getValue(fR){return this.getData(this.#keyValueTableName,fR)}async getValues(fS){return this.getDataValues(this.#keyValueTableName,fS)}async getAllValues(){return this.getAllData(this.#keyValueTableName)}async setValue(fT,fU){return this.setData(this.#keyValueTableName,fT,fU)}async setValues(fV){return this.setDataValues(this.#keyValueTableName,fV)}async getAllData(fW){if(this.#database==null)throw Error('The database has not been opened.');var fX=this.openTransaction([fW],'readonly');fX.onerror=fZ=>{throw fZ};var fY=await new Promise((gA,gB)=>{const gC=fX.objectStore(fW),gD=gC.getAll();gD.onsuccess=gE=>{const gF=gE.target.result;gA(gF==null?[]:gF.value)};gD.onerror=gG=>gB(gG)});return fY}async getData(gH,gI){if(this.#database==null)throw Error('The database has not been opened.');var gJ=this.openTransaction([gH],'readonly');gJ.onerror=gL=>{throw gL};var gK=await new Promise((gM,gN)=>{const gO=gJ.objectStore(gH),gP=gO.get(gI);gP.onsuccess=gQ=>{const gR=gQ.target.result;gM(gR==null?null:gR.value)};gP.onerror=gS=>gN(gS)});return gK}async getDataValues(gT,gU){var gV=this.openTransaction([gT],'readonly'),gW=[];for(const gX of gU)gW.push(new Promise((gY,gZ)=>{var hA=gV.objectStore(gT),hB=hA.get(gX);hB.onsuccess=hC=>{var hD=hC.target.result;gY(hD==null?null:hD.value)};hB.onerror=hE=>gZ(hE)}));return await Promise.all(gW)}async setData(hF,hG,hH){if(this.#database==null)throw Error('The database has not been opened.');var hI=this.openTransaction([hF]);hI.onerror=hK=>{throw hK};var hJ=await new Promise((hL,hM)=>{const hN=hI.objectStore(hF),hO=hH==void 0?hN.delete(hG):hN.put({key:hG,value:hH});hO.onsuccess=hP=>{hL(hP.target.result)};hO.onerror=hQ=>hM(hQ)});return hJ}async setDataValues(hR,hS){if(this.#database==null)throw Error('The database has not been opened.');var hT=this.openTransaction([hR]),hV=[];hT.onerror=hW=>{throw hW};var hU=hT.objectStore(hR);for(const hX of hS)hV.push(new Promise((hY,hZ)=>{var iA=hX.value==void 0?hU.delete(hX.key):hU.put(hX);iA.onsuccess=iB=>{hY(iB.target.result)};iA.onerror=iC=>hZ(iC)}));await Promise.all(hV)}async removeData(iD,...iE){if(this.#database==null)throw Error('The database has not been opened.');var iF=this.openTransaction([iD]);iF.onerror=iG=>{throw iG};return await new Promise((iH,iI)=>{var iJ=iF.objectStore(iD),iK=[];for(const iL of iE)iK.push(new Promise((iM,iN)=>{var iO=iJ.delete(iL);iO.onsuccess=iP=>{iM(iP.target.result)};iO.onerror=iQ=>iN(iQ)}));iH(Promise.all(iK))})}async getKeys(iR,...iS){if(this.#database==null)throw Error('The database has not been opened.');var iT=this.openTransaction([iR],'readonly');iT.onerror=iV=>{throw iV};var iU=await new Promise((iW,iX)=>{const iY=iT.objectStore(iR),iZ=iS.length==0?iY.getAll():iY.get(iS);iZ.onsuccess=jA=>{const jB=jA.target.result;iW(jB==null?[]:jB.map(item=>item.key))};iZ.onerror=jC=>iX(jC)});return iU}async setKey(jD,jE){if(this.#database==null)throw Error('The database has not been opened.');var jF=this.openTransaction([jD]);jF.onerror=jH=>{throw jH};var jG=await new Promise((jI,jJ)=>{const jK=jF.objectStore(jD),jL=jK.put({key:jE});jL.onsuccess=jM=>{jI(jM.target.result)};jL.onerror=jN=>jJ(jN)});return jG}async setKeys(jO,jP){if(this.#database==null)throw Error('The database has not been opened.');var jQ=this.openTransaction([jO]),jR=[];for(const jT of jP)jR.push(new Promise((jU,jV)=>{var jW=jQ.objectStore(jO),jX=jW.put({key:jT});jX.onsuccess=jY=>{jU(jY.target.result)};jX.onerror=jZ=>jV(jZ)}));var jS=await Promise.all(jR);return await this.getKeys(jO,...jS)}async removeKey(kA,kB){if(this.#database==null)throw Error('The database has not been opened.');var kC=this.openTransaction([kA]);kC.onerror=kD=>{throw kD};return new Promise((kE,kF)=>{var kG=kC.objectStore(kA),kH=kG.delete(kB);kH.onsuccess=kI=>{kE(kI.target.result)};kH.onerror=kJ=>kF(kJ)})}async clearStoreKeys(kK){if(this.#database==null)throw Error('The database has not been opened.');var kL=this.openTransaction([kK]);kL.onerror=kM=>{throw kM};return new Promise((kN,kO)=>{var kP=kL.objectStore(kK),kQ=kP.clear();kQ.onsuccess=kR=>{kN(kR.target.result)};kQ.onerror=kS=>kO(kS)})}openTransaction(kT,kU='readwrite'){if(this.#database==null)throw Error('The database has not been opened.');return this.#database.transaction(kT,kU)}static generateId(){var kV=new Uint8Array(20);crypto.getRandomValues(kV);return btoa([].slice.apply(kV).map(kW=>String.fromCharCode(kW)).join('')).replace(/\//g,'_').replace(/\+/g,'-').replace(/=/g,'')}},c=a=>typeof a==='function';((C,_b)=>{for(var _c in _b)d(C,_c,{get:_b[_c],enumerable:!0})})(B,{DataRecord:()=>J,RecordSetter:()=>l,RecordStore:()=>k});module.exports=(E=>h(d({},'__esModule',{value:!0}),E))(B);var J=class{id=''};0&&(module.exports={DataRecord:J,RecordSetter:l,RecordStore:k});
